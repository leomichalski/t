name: Continuous Deployment (CD)

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - 'docs/*'
      - '**.local.yml'
      - '**.local.sh'
      - '**Dockerfile.local'
      - '.github/*'
  # pull_request:
  #   branches: [ "main" ]
  #   paths-ignore:
  #     - '**.md'
  #     - 'docs/*'
  #     - '**.local.yml'
  #     - '**.local.sh'
  #     - '**Dockerfile.local'
  #     - '.github/*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  cd:
    runs-on: ubuntu-latest

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: cd.yml
          directory: setup/playbooks/

          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: |
            [server]
            ${{ secrets.SSH_HOSTNAME }} ansible_user=ubuntu

          # SSH known hosts file content, same as `ssh-keyscan -t rsa,dsa,ecdsa,ed25519 $HOSTNAME` output
          known_hosts: |
            ${{ secrets.SSH_KNOWN_HOSTS_FILE_CONTENT }}
          # sender_password='${{ secrets.SENDER_PASSWORD }}'
          options: |
            --limit server
            --extra-vars "branch='main'
                          secret_key_base='${{ secrets.SECRET_KEY_BASE }}'
                          hostname='${{ secrets.HOSTNAME }}'
                          admin_email='${{ secrets.ADMIN_EMAIL }}'
                          admin_password='${{ secrets.ADMIN_PASSWORD }}'
                          admin_username='${{ secrets.ADMIN_USERNAME }}'
                          smtp_password='${{ secrets.SMTP_PASSWORD }}'
                          smtp_address='${{ secrets.SMTP_ADDRESS }}'
                          smtp_port='${{ secrets.SMTP_PORT }}'
                          smtp_domain='${{ secrets.SMTP_DOMAIN }}'
                          client_id='${{ secrets.CLIENT_ID }}'
                          secret_key='${{ secrets.SECRET_KEY }}'
                          postgres_host='${{ secrets.POSTGRES_HOST }}'
                          postgres_port='${{ secrets.POSTGRES_PORT }}'
                          postgres_db='${{ secrets.POSTGRES_DB }}'
                          postgres_user='${{ secrets.POSTGRES_USER }}'
                          postgres_password='${{ secrets.POSTGRES_PASSWORD }}'"

